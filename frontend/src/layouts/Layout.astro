---
import { ViewTransitions } from 'astro:transitions';
import AsideMenu from '../components/AsideMenu.astro';
import Navbar from '../components/Navbar.astro';
import { decodeToken } from '../helpers/decodeJWT';
import { getUserById } from '../services/userRequests';
interface Props {
	title: string;
}

const cookie = Astro.cookies.get("authToken")
let userId:string | null = ''
// Ejemplo de uso
const token = cookie?.value; // Reemplaza con tu token

try {
    const decoded = decodeToken(token);
	userId = decoded.user_id; // Ajusta el nombre seg√∫n tu payload
} catch (error) {
    console.error('Error al decodificar el token:', error.message);
}

const userInfo = await getUserById(userId)

const { title } = Astro.props;
const {id, username, name, role, profile_image_url} = userInfo
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/png" href="/favicon.png" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions/>
	</head>
	<body class="relative">
		<div class="absolute w-full top-0 left-0 h-60 overflow-hidden -z-10">
			<img src="/images/cover-user-account.jpg" alt="user-cover" class="h-full w-full object-cover object-center animate-scale animate-duration-1000">
			<div class="absolute inset-0 bg-gradient-to-t from-sky-400/50 via-sky-400/20"></div>
		</div>

		<div class="mx-auto relative flex items-start justify-center px-20 w-full h-40">
			<Navbar userInfo={userInfo}/>
		</div>

		<div id="app" class="container max-w-screen-xl mx-auto pt-5 pb-10 px-14 flex gap-4 flex-col-reverse relative z-10 ">
			<AsideMenu userInfo={userInfo}/>
			<main class="[grid-area:main] rounded-lg overflow-hidden min-h-40 space-y-4" >
				<slot />
			</main>
		</div>
	</body>
</html>
<script>
	import { verifyUserAuthetication } from "../services/userAuthentication";
	 
</script>
<style>
	@media (min-width: 1024px){
		#app{
			display: grid;
			gap: 1rem;
			grid-template-areas: 
			"aside main main"
			"player player player";
			grid-template-columns: 250px 1fr;
			grid-template-rows: 1fr auto
		}
	}
</style>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
		background: hsl(252, 97%, 14%);
	}
	
	body{
        font-family: 'Fira Mono', monospace;
    }
	
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
</style>


